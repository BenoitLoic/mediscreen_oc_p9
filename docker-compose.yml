version: '2.2'

services:
  mysqldb:
    build: ./patientinfo/scripts
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=groot
      - MYSQL_DATABASE=mediscreen_mysql_db
    ports:
      - "3307:3306"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      timeout: 5s
      retries: 10
    volumes:
      - mysql_db:/var/lib/mysql/


  mongo:
    image: mongo
    restart: always
    container_name: mongo_med
    healthcheck:
      test: [ "CMD","mongo", "--eval", "db.adminCommand('ping')" ]
      interval: 10s
      timeout: 10s
      retries: 5
    ports:
      - "27017:27017"
    logging:
      driver: none
    volumes:
      - mongo_db:/data/db

  mongo-express:
    image: mongo-express
    depends_on:
      - mongo
    restart: always
    ports:
      - "8090:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: groot
      ME_CONFIG_MONGODB_URL: mongodb://root:groot@mongo:27017/

  patient_info:
    depends_on:
      mysqldb:
        condition: service_healthy
    build: ./patientinfo
    container_name: patient-info
    restart: on-failure
    ports:
      - "8081:8081"
    volumes:
      - .m2:/root/.m2
    stdin_open: true
    tty: true

  adminer:
    image: adminer
    restart: always
    ports:
      - "8085:8080"

  patient_history:
    depends_on:
      mongo:
        condition: service_healthy
    build: ./patienthistory
    restart: on-failure
    ports:
      - "8082:8082"
    volumes:
      - .m2:/root/.m2

  front:
    container_name: angular_med
    build: ./front/mediscreenFront
    volumes:
      - './front/mediscreenFront:/usr/src/app'
    ports:
      - '4200:4200'
    command: >
      bash -c "npm install && ng serve --host 0.0.0.0 --port 4200"


volumes:
  mysql_db:
  mongo_db: